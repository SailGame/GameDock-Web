name: Release

on:
  release:
    types: [published]

jobs:
  release:
    name: Release
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v1
        with:
          submodules: "true"
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
  
      - name: Install Dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Create package
        id: package
        run: |
          PACKAGE_NAME=GameDockWeb.${GITHUB_REF#refs/tags/}.tar.gz
          cp README.md dist/
          cp LICENSE dist/
          tar -czvf $PACKAGE_NAME -C dist .
          echo ::set-output name=name::${PACKAGE_NAME}

      - name: Upload asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ steps.package.outputs.name }}
          asset_name: ${{ steps.package.outputs.name }}
          asset_content_type: application/gzip
